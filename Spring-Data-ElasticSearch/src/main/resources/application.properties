spring.data.elasticsearch.repositories.enabled=true

# using auto config
#spring.data.elasticsearch.cluster-nodes=${ES_URI:localhost}:9301
#spring.data.elasticsearch.cluster-name=${ES_CLUSTER_NAME:docker-cluster}
spring.data.elasticsearch.client.transport.sniff = false

elasticsearch.cluster-nodes=${ES_URI:localhost}
elasticsearch.cluster-port=9301
elasticsearch.cluster-name=${ES_CLUSTER_NAME:docker-cluster}

management.endpoints.web.base-path=/
management.endpoints.jmx.exposure.include=*
management.endpoint.health.show-details=always
management.health.elasticsearch.enabled=false


## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5442/postgres
spring.datasource.username=postgres
spring.datasource.password=password

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.show-sql=true
spring.jpa.properties.hibernate.default_schema=elastic_db
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true